services:
  db:
    image: postgres:16
    container_name: database
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - '5432:5432'
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - app_net

  pgadmin:
    image: dpage/pgadmin4
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "8080:80"
    depends_on:
      - db
    networks:
      - app_net

  crawler:
    build:
      context: ../crawler
    container_name: crawler
    depends_on:
      - db
    environment:
      DB_NAME: ${POSTGRES_DB}
      DB_USER: ${POSTGRES_USER}
      DB_PASS: ${POSTGRES_PASSWORD}
      DB_HOST: db
      DB_PORT: 5432
    volumes:
      - ../crawler/media:/app/media
    networks:
      - app_net

  server:
    build:
      context: ../server
    container_name: server
    restart: unless-stopped
    environment:
      FRONTEND_URL: ${FRONTEND_URL}
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      JWT_SECRET: ${JWT_SECRET}
      NODE_ENV: production
    ports:
      - "3000:3000"
    volumes:
      - ../crawler/media:/app/tracks
      - ../crawler/static:/app/static
    depends_on:
      - db
      - crawler
    networks:
      - app_net

  client:
    build:
      context: ../client
    container_name: client
    restart: unless-stopped
    ports:
    - "5173:5173"  
    volumes:
    - ../client/certs:/app/certs:ro
    depends_on:
      - server
    networks:
      - app_net

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "443:443"
    volumes:
      - ../nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ../nginx/certs:/etc/nginx/certs:ro
    depends_on:
      - server
    networks:
      - app_net

  ca:
    build:
      context: ../ca-server
    container_name: ca
    restart: unless-stopped
    ports:
      - "4000:4000"
    volumes:
      - ../ca-server/ec_private_key.pem:/app/ec_private_key.pem:ro
      - ../ca-server/ec_public_key.pem:/app/ec_public_key.pem:ro
      - ../ca-server/ec_cert.pem:/app/ec_cert.pem:ro
    networks:
      - app_net
volumes:
  db_data:

networks:
  app_net:
