services:
  db:
    image: postgres:16
    container_name: database
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - '5432:5432'
    volumes:
      - db_data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "8080:80"
    depends_on:
      - db

  server:
    build:
      context: ../server      
    container_name: server
    restart: unless-stopped
    environment:
      FRONTEND_URL: ${FRONTEND_URL}
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      JWT_SECRET: ${JWT_SECRET}
      NODE_ENV: production
    ports:
      - "3000:3000"
    depends_on:
      - db

  client:
    build:
      context: ../client     
    container_name: client
    restart: unless-stopped
    ports:
      - "80:80"              
    depends_on:
      - server

  crawler:
    build:
      context: ../crawler
    container_name: crawler
    depends_on:
      - db
    environment:
      DB_NAME: ${POSTGRES_DB}
      DB_USER: ${POSTGRES_USER}
      DB_PASS: ${POSTGRES_PASSWORD}
      DB_HOST: db
      DB_PORT: 5432
    volumes:
      - ../crawler/media:/app/media

volumes:
  db_data:
